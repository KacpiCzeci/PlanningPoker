/**
 * Generated by orval v6.7.1 🍺
 * Do not edit manually.
 * Planning Poker API
 * OpenAPI spec version: 1.0
 */
import type {
  GetResultSuccessDto,
  VoteDto,
  BoardDto,
  CreateVotingDto,
  VotingDto
} from './schemas'
import { customInstance, ErrorType } from './custom-instance'


  export const appControllerGetData = (
    
 ) => {
      return customInstance<void>(
      {url: `/api`, method: 'get'
    },
      );
    }
  
export const votingControllerFinish = (
    
 ) => {
      return customInstance<void>(
      {url: `/api/voting/finish`, method: 'get'
    },
      );
    }
  
export const votingControllerGetResult = (
    
 ) => {
      return customInstance<GetResultSuccessDto>(
      {url: `/api/voting/getResult`, method: 'get'
    },
      );
    }
  
export const votingControllerVote = (
    voteDto: VoteDto,
 ) => {
      return customInstance<void>(
      {url: `/api/voting/vote`, method: 'post',
      headers: {'Content-Type': 'application/json'},
      data: voteDto
    },
      );
    }
  
export const boardControllerGetBoard = (
    
 ) => {
      return customInstance<BoardDto>(
      {url: `/api/board`, method: 'get'
    },
      );
    }
  
export const boardControllerNewVoting = (
    createVotingDto: CreateVotingDto,
 ) => {
      return customInstance<void>(
      {url: `/api/board/newVoting`, method: 'post',
      headers: {'Content-Type': 'application/json'},
      data: createVotingDto
    },
      );
    }
  
export const boardControllerGetNextVoting = (
    
 ) => {
      return customInstance<VotingDto>(
      {url: `/api/board/nextVoting`, method: 'get'
    },
      );
    }
  

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<
T extends (...args: any) => Promise<any>
> = T extends (...args: any) => Promise<infer R> ? R : any;

export type AppControllerGetDataResult = NonNullable<AsyncReturnType<typeof appControllerGetData>>
export type VotingControllerFinishResult = NonNullable<AsyncReturnType<typeof votingControllerFinish>>
export type VotingControllerGetResultResult = NonNullable<AsyncReturnType<typeof votingControllerGetResult>>
export type VotingControllerVoteResult = NonNullable<AsyncReturnType<typeof votingControllerVote>>
export type BoardControllerGetBoardResult = NonNullable<AsyncReturnType<typeof boardControllerGetBoard>>
export type BoardControllerNewVotingResult = NonNullable<AsyncReturnType<typeof boardControllerNewVoting>>
export type BoardControllerGetNextVotingResult = NonNullable<AsyncReturnType<typeof boardControllerGetNextVoting>>